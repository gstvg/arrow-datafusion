# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

#############
## Struct Expressions Tests
#############

statement ok
CREATE TABLE values(
    a INT,
    b FLOAT,
    c VARCHAR
) AS VALUES
  (1, 1.1, 'a'),
  (2, 2.2, 'b'),
  (3, 3.3, 'c')
;

# struct[i]
query IRT
select struct(1, 3.14, 'h')['c0'], struct(3, 2.55, 'b')['c1'], struct(2, 6.43, 'a')['c2'];
----
1 2.55 a

# struct[i] with columns
query R
select struct(a, b, c)['c1'] from values;
----
1.1
2.2
3.3

# struct scalar function #1
query ?
select struct(1, 3.14, 'e');
----
{c0: 1, c1: 3.14, c2: e}

# struct scalar function with columns #1
query ?
select struct(a, b as b_name, c) from values;
----
{c0: 1, b_name: 1.1, c2: a}
{c0: 2, b_name: 2.2, c2: b}
{c0: 3, b_name: 3.3, c2: c}

# explain struct scalar function with columns #1
query TT
explain select struct(a, b as b_name, c) from values;
----
logical_plan
Projection: CAST(struct(values.a, values.b AS b_name, values.c) AS Struct([Field { name: "c0", data_type: Int32, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }, Field { name: "b_name", data_type: Float32, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }, Field { name: "c2", data_type: Utf8, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }]))
--TableScan: values projection=[a, b, c]
physical_plan
ProjectionExec: expr=[CAST(struct(a@0, b@1, c@2) AS Struct([Field { name: "c0", data_type: Int32, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }, Field { name: "b_name", data_type: Float32, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }, Field { name: "c2", data_type: Utf8, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }])) as struct(values.a,b_name,values.c)]
--MemoryExec: partitions=1, partition_sizes=[1]

statement ok
drop table values;
